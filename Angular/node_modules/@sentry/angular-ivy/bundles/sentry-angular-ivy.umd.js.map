{"version":3,"file":"sentry-angular-ivy.umd.js","sources":["../../src/flags.ts","../../src/sdk.ts","../../src/zone.ts","../../src/errorhandler.ts","../../src/constants.ts","../../src/tracing.ts","../../src/sentry-angular-ivy.ts"],"sourcesContent":["/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * We define \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during our, or the user's\n * build process. Take care when introducing new flags - they must not throw if they are not replaced. See the Debug\n * Build Flags section in CONTRIBUTING.md.\n */\n\ndeclare const __SENTRY_DEBUG__: boolean;\n\n/** Flag that is true for debug builds, false otherwise. */\nexport const IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n","import { VERSION } from '@angular/core';\nimport type { BrowserOptions } from '@sentry/browser';\nimport { getDefaultIntegrations, init as browserInit, setContext } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from './flags';\n\n/**\n * Inits the Angular SDK\n */\nexport function init(options: BrowserOptions): void {\n  const opts = {\n    // Filter out TryCatch integration as it interferes with our Angular `ErrorHandler`:\n    // TryCatch would catch certain errors before they reach the `ErrorHandler` and thus provide a\n    // lower fidelity error than what `SentryErrorHandler` (see errorhandler.ts) would provide.\n    // see:\n    //  - https://github.com/getsentry/sentry-javascript/issues/5417#issuecomment-1453407097\n    //  - https://github.com/getsentry/sentry-javascript/issues/2744\n    defaultIntegrations: getDefaultIntegrations(options).filter(integration => {\n      return integration.name !== 'TryCatch';\n    }),\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'angular-ivy');\n\n  checkAndSetAngularVersion();\n  browserInit(opts);\n}\n\nfunction checkAndSetAngularVersion(): void {\n  const ANGULAR_MINIMUM_VERSION = 12;\n\n  const angularVersion = VERSION && VERSION.major ? parseInt(VERSION.major, 10) : undefined;\n\n  if (angularVersion) {\n    if (angularVersion < ANGULAR_MINIMUM_VERSION) {\n      IS_DEBUG_BUILD &&\n        logger.warn(\n          `This Sentry SDK does not officially support Angular ${angularVersion}.`,\n          `This SDK only supports Angular ${ANGULAR_MINIMUM_VERSION} and above.`,\n          \"If you're using Angular 10 or 11, please use `@sentry/angular` instead.\",\n          'Otherwise, please consider upgrading your Angular version.',\n        );\n    }\n    setContext('angular', { version: angularVersion });\n  }\n}\n","// That's the `global.Zone` exposed when the `zone.js` package is used.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Zone: any;\n\n// There're 2 types of Angular applications:\n// 1) zone-full (by default)\n// 2) zone-less\n// The developer can avoid importing the `zone.js` package and tells Angular that\n// he is responsible for running the change detection by himself. This is done by\n// \"nooping\" the zone through `CompilerOptions` when bootstrapping the root module.\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst isNgZoneEnabled = typeof Zone !== 'undefined' && !!Zone.current;\n\n/**\n * The function that does the same job as `NgZone.runOutsideAngular`.\n */\nexport function runOutsideAngular<T>(callback: () => T): T {\n  // The `Zone.root.run` basically will run the `callback` in the most parent zone.\n  // Any asynchronous API used inside the `callback` won't catch Angular's zone\n  // since `Zone.current` will reference `Zone.root`.\n  // The Angular's zone is forked from the `Zone.root`. In this case, `zone.js` won't\n  // trigger change detection, and `ApplicationRef.tick()` will not be run.\n  // Caretaker note: we're using `Zone.root` except `NgZone.runOutsideAngular` since this\n  // will require injecting the `NgZone` facade. That will create a breaking change for\n  // projects already using the `@sentry/angular`.\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return isNgZoneEnabled ? Zone.root.run(callback) : callback();\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport type { ErrorHandler as AngularErrorHandler } from '@angular/core';\nimport { Inject, Injectable } from '@angular/core';\nimport * as Sentry from '@sentry/browser';\nimport type { Event } from '@sentry/types';\nimport { isString } from '@sentry/utils';\n\nimport { runOutsideAngular } from './zone';\n\n/**\n * Options used to configure the behavior of the Angular ErrorHandler.\n */\nexport interface ErrorHandlerOptions {\n  logErrors?: boolean;\n  showDialog?: boolean;\n  // eslint-disable-next-line deprecation/deprecation\n  dialogOptions?: Omit<Sentry.ReportDialogOptions, 'eventId'>;\n  /**\n   * Custom implementation of error extraction from the raw value captured by the Angular.\n   * @param error Value captured by Angular's ErrorHandler provider\n   * @param defaultExtractor Default implementation that can be used as the fallback in case of custom implementation\n   */\n  extractor?(error: unknown, defaultExtractor: (error: unknown) => unknown): unknown;\n}\n\n// https://github.com/angular/angular/blob/master/packages/core/src/util/errors.ts\nfunction tryToUnwrapZonejsError(error: unknown): unknown | Error {\n  // TODO: once Angular14 is the minimum requirement ERROR_ORIGINAL_ERROR and\n  //  getOriginalError from error.ts can be used directly.\n  return error && (error as { ngOriginalError: Error }).ngOriginalError\n    ? (error as { ngOriginalError: Error }).ngOriginalError\n    : error;\n}\n\nfunction extractHttpModuleError(error: HttpErrorResponse): string | Error {\n  // The `error` property of http exception can be either an `Error` object, which we can use directly...\n  if (isErrorOrErrorLikeObject(error.error)) {\n    return error.error;\n  }\n\n  // ... or an`ErrorEvent`, which can provide us with the message but no stack...\n  if (error.error instanceof ErrorEvent && error.error.message) {\n    return error.error.message;\n  }\n\n  // ...or the request body itself, which we can use as a message instead.\n  if (typeof error.error === 'string') {\n    return `Server returned code ${error.status} with body \"${error.error}\"`;\n  }\n\n  // If we don't have any detailed information, fallback to the request message itself.\n  return error.message;\n}\n\ntype ErrorCandidate = {\n  name?: unknown;\n  message?: unknown;\n  stack?: unknown;\n};\n\nfunction isErrorOrErrorLikeObject(value: unknown): value is Error {\n  if (value instanceof Error) {\n    return true;\n  }\n\n  if (value === null || typeof value !== 'object') {\n    return false;\n  }\n\n  const candidate = value as ErrorCandidate;\n\n  return (\n    isString(candidate.name) &&\n    isString(candidate.message) &&\n    (undefined === candidate.stack || isString(candidate.stack))\n  );\n}\n\n/**\n * Implementation of Angular's ErrorHandler provider that can be used as a drop-in replacement for the stock one.\n */\n@Injectable({ providedIn: 'root' })\nclass SentryErrorHandler implements AngularErrorHandler {\n  protected readonly _options: ErrorHandlerOptions;\n\n  /* indicates if we already registered our the afterSendEvent handler */\n  private _registeredAfterSendEventHandler;\n\n  public constructor(@Inject('errorHandlerOptions') options?: ErrorHandlerOptions) {\n    this._registeredAfterSendEventHandler = false;\n\n    this._options = {\n      logErrors: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Method called for every value captured through the ErrorHandler\n   */\n  public handleError(error: unknown): void {\n    const extractedError = this._extractError(error) || 'Handled unknown error';\n\n    // Capture handled exception and send it to Sentry.\n    const eventId = runOutsideAngular(() =>\n      Sentry.captureException(extractedError, {\n        mechanism: { type: 'angular', handled: false },\n      }),\n    );\n\n    // When in development mode, log the error to console for immediate feedback.\n    if (this._options.logErrors) {\n      // eslint-disable-next-line no-console\n      console.error(extractedError);\n    }\n\n    // Optionally show user dialog to provide details on what happened.\n    if (this._options.showDialog) {\n      const client = Sentry.getClient();\n\n      if (client && client.on && !this._registeredAfterSendEventHandler) {\n        client.on('afterSendEvent', (event: Event) => {\n          if (!event.type) {\n            // eslint-disable-next-line deprecation/deprecation\n            Sentry.showReportDialog({ ...this._options.dialogOptions, eventId: event.event_id });\n          }\n        });\n\n        // We only want to register this hook once in the lifetime of the error handler\n        this._registeredAfterSendEventHandler = true;\n      } else if (!client || !client.on) {\n        Sentry.showReportDialog({ ...this._options.dialogOptions, eventId });\n      }\n    }\n  }\n\n  /**\n   * Used to pull a desired value that will be used to capture an event out of the raw value captured by ErrorHandler.\n   */\n  protected _extractError(error: unknown): unknown {\n    // Allow custom overrides of extracting function\n    if (this._options.extractor) {\n      const defaultExtractor = this._defaultExtractor.bind(this);\n      return this._options.extractor(error, defaultExtractor);\n    }\n\n    return this._defaultExtractor(error);\n  }\n\n  /**\n   * Default implementation of error extraction that handles default error wrapping, HTTP responses, ErrorEvent and few other known cases.\n   */\n  protected _defaultExtractor(errorCandidate: unknown): unknown {\n    const error = tryToUnwrapZonejsError(errorCandidate);\n\n    // If it's http module error, extract as much information from it as we can.\n    if (error instanceof HttpErrorResponse) {\n      return extractHttpModuleError(error);\n    }\n\n    // We can handle messages and Error objects directly.\n    if (typeof error === 'string' || isErrorOrErrorLikeObject(error)) {\n      return error;\n    }\n\n    // Nothing was extracted, fallback to default error message.\n    return null;\n  }\n}\n\n/**\n * Factory function that creates an instance of a preconfigured ErrorHandler provider.\n */\nfunction createErrorHandler(config?: ErrorHandlerOptions): SentryErrorHandler {\n  return new SentryErrorHandler(config);\n}\n\nexport { createErrorHandler, SentryErrorHandler };\n","export const ANGULAR_ROUTING_OP = 'ui.angular.routing';\n\nexport const ANGULAR_INIT_OP = 'ui.angular.init';\n\nexport const ANGULAR_OP = 'ui.angular';\n","/* eslint-disable max-lines */\nimport type { AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { Directive, Injectable, Input, NgModule } from '@angular/core';\nimport type { ActivatedRouteSnapshot, Event, RouterState } from '@angular/router';\n// Duplicated import to work around a TypeScript bug where it'd complain that `Router` isn't imported as a type.\n// We need to import it as a value to satisfy Angular dependency injection. So:\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport { NavigationCancel, NavigationError, Router } from '@angular/router';\nimport { NavigationEnd, NavigationStart, ResolveEnd } from '@angular/router';\nimport {\n  WINDOW,\n  browserTracingIntegration as originalBrowserTracingIntegration,\n  getCurrentScope,\n  startBrowserTracingNavigationSpan,\n} from '@sentry/browser';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  getActiveSpan,\n  getClient,\n  spanToJSON,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Integration, Span, Transaction, TransactionContext } from '@sentry/types';\nimport { logger, stripUrlQueryAndFragment, timestampInSeconds } from '@sentry/utils';\nimport type { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\nimport { ANGULAR_INIT_OP, ANGULAR_OP, ANGULAR_ROUTING_OP } from './constants';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { runOutsideAngular } from './zone';\n\nlet instrumentationInitialized: boolean;\nlet stashedStartTransaction: (context: TransactionContext) => Transaction | undefined;\nlet stashedStartTransactionOnLocationChange: boolean;\n\nlet hooksBasedInstrumentation = false;\n\n/**\n * Creates routing instrumentation for Angular Router.\n *\n * @deprecated Use `browserTracingIntegration()` instead, which includes Angular-specific instrumentation out of the box.\n */\nexport function routingInstrumentation(\n  customStartTransaction: (context: TransactionContext) => Transaction | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  instrumentationInitialized = true;\n  stashedStartTransaction = customStartTransaction;\n  stashedStartTransactionOnLocationChange = startTransactionOnLocationChange;\n\n  if (startTransactionOnPageLoad && WINDOW && WINDOW.location) {\n    customStartTransaction({\n      name: WINDOW.location.pathname,\n      op: 'pageload',\n      origin: 'auto.pageload.angular',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n      },\n    });\n  }\n}\n\n/**\n * Creates routing instrumentation for Angular Router.\n *\n * @deprecated Use `browserTracingIntegration()` instead, which includes Angular-specific instrumentation out of the box.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const instrumentAngularRouting = routingInstrumentation;\n\n/**\n * A custom BrowserTracing integration for Angular.\n *\n * Use this integration in combination with `TraceService`\n */\nexport function browserTracingIntegration(\n  options: Parameters<typeof originalBrowserTracingIntegration>[0] = {},\n): Integration {\n  // If the user opts out to set this up, we just don't initialize this.\n  // That way, the TraceService will not actually do anything, functionally disabling this.\n  if (options.instrumentNavigation !== false) {\n    instrumentationInitialized = true;\n    hooksBasedInstrumentation = true;\n  }\n\n  return originalBrowserTracingIntegration({\n    ...options,\n    instrumentNavigation: false,\n  });\n}\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\nexport function getActiveTransaction(): Transaction | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getTransaction();\n}\n\n/**\n * Angular's Service responsible for hooking into Angular Router and tracking current navigation process.\n * Creates a new transaction for every route change and measures a duration of routing process.\n */\n@Injectable({ providedIn: 'root' })\nexport class TraceService implements OnDestroy {\n  public navStart$: Observable<Event> = this._router.events.pipe(\n    filter((event): event is NavigationStart => event instanceof NavigationStart),\n    tap(navigationEvent => {\n      if (!instrumentationInitialized) {\n        IS_DEBUG_BUILD &&\n          logger.error('Angular integration has tracing enabled, but Tracing integration is not configured');\n        return;\n      }\n\n      if (this._routingSpan) {\n        this._routingSpan.end();\n        this._routingSpan = null;\n      }\n\n      const client = getClient();\n      const strippedUrl = stripUrlQueryAndFragment(navigationEvent.url);\n\n      if (client && hooksBasedInstrumentation) {\n        if (!getActiveSpan()) {\n          startBrowserTracingNavigationSpan(client, {\n            name: strippedUrl,\n            origin: 'auto.navigation.angular',\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            },\n          });\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        this._routingSpan =\n          startInactiveSpan({\n            name: `${navigationEvent.url}`,\n            op: ANGULAR_ROUTING_OP,\n            origin: 'auto.ui.angular',\n            tags: {\n              'routing.instrumentation': '@sentry/angular',\n              url: strippedUrl,\n              ...(navigationEvent.navigationTrigger && {\n                navigationTrigger: navigationEvent.navigationTrigger,\n              }),\n            },\n          }) || null;\n\n        return;\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      let activeTransaction = getActiveTransaction();\n\n      if (!activeTransaction && stashedStartTransactionOnLocationChange) {\n        activeTransaction = stashedStartTransaction({\n          name: strippedUrl,\n          op: 'navigation',\n          origin: 'auto.navigation.angular',\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          },\n        });\n      }\n\n      if (activeTransaction) {\n        // eslint-disable-next-line deprecation/deprecation\n        this._routingSpan = activeTransaction.startChild({\n          description: `${navigationEvent.url}`,\n          op: ANGULAR_ROUTING_OP,\n          origin: 'auto.ui.angular',\n          tags: {\n            'routing.instrumentation': '@sentry/angular',\n            url: strippedUrl,\n            ...(navigationEvent.navigationTrigger && {\n              navigationTrigger: navigationEvent.navigationTrigger,\n            }),\n          },\n        });\n      }\n    }),\n  );\n\n  // The ResolveEnd event is fired when the Angular router has resolved the URL and\n  // the parameter<->value mapping. It holds the new resolved router state with\n  // the mapping and the new URL.\n  // Only After this event, the route is activated, meaning that the transaction\n  // can be updated with the parameterized route name before e.g. the route's root\n  // component is initialized. This should be early enough before outgoing requests\n  // are made from the new route, with the exceptions of requests being made during\n  // a navigation.\n  public resEnd$: Observable<Event> = this._router.events.pipe(\n    filter((event): event is ResolveEnd => event instanceof ResolveEnd),\n    tap(event => {\n      const route = getParameterizedRouteFromSnapshot(\n        (event.state as unknown as RouterState & { root: ActivatedRouteSnapshot }).root,\n      );\n\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction();\n      // TODO (v8 / #5416): revisit the source condition. Do we want to make the parameterized route the default?\n      const attributes = (transaction && spanToJSON(transaction).data) || {};\n      if (transaction && attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] === 'url') {\n        transaction.updateName(route);\n        transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n        transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, `auto.${spanToJSON(transaction).op}.angular`);\n      }\n    }),\n  );\n\n  public navEnd$: Observable<Event> = this._router.events.pipe(\n    filter(\n      event => event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError,\n    ),\n    tap(() => {\n      if (this._routingSpan) {\n        runOutsideAngular(() => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._routingSpan!.end();\n        });\n        this._routingSpan = null;\n      }\n    }),\n  );\n\n  private _routingSpan: Span | null;\n\n  private _subscription: Subscription;\n\n  public constructor(private readonly _router: Router) {\n    this._routingSpan = null;\n    this._subscription = new Subscription();\n\n    this._subscription.add(this.navStart$.subscribe());\n    this._subscription.add(this.resEnd$.subscribe());\n    this._subscription.add(this.navEnd$.subscribe());\n  }\n\n  /**\n   * This is used to prevent memory leaks when the root view is created and destroyed multiple times,\n   * since `subscribe` callbacks capture `this` and prevent many resources from being GC'd.\n   */\n  public ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\n/**\n * A directive that can be used to capture initialization lifecycle of the whole component.\n */\n@Directive({ selector: '[trace]' })\nexport class TraceDirective implements OnInit, AfterViewInit {\n  @Input('trace') public componentName?: string;\n\n  private _tracingSpan?: Span;\n\n  /**\n   * Implementation of OnInit lifecycle method\n   * @inheritdoc\n   */\n  public ngOnInit(): void {\n    if (!this.componentName) {\n      this.componentName = UNKNOWN_COMPONENT;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n      // eslint-disable-next-line deprecation/deprecation\n      this._tracingSpan = activeTransaction.startChild({\n        description: `<${this.componentName}>`,\n        op: ANGULAR_INIT_OP,\n        origin: 'auto.ui.angular.trace_directive',\n      });\n    }\n  }\n\n  /**\n   * Implementation of AfterViewInit lifecycle method\n   * @inheritdoc\n   */\n  public ngAfterViewInit(): void {\n    if (this._tracingSpan) {\n      this._tracingSpan.end();\n    }\n  }\n}\n\n/**\n * A module serves as a single compilation unit for the `TraceDirective` and can be re-used by any other module.\n */\n@NgModule({\n  declarations: [TraceDirective],\n  exports: [TraceDirective],\n})\nexport class TraceModule {}\n\n/**\n * Decorator function that can be used to capture initialization lifecycle of the whole component.\n */\nexport function TraceClassDecorator(): ClassDecorator {\n  let tracingSpan: Span;\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  return target => {\n    const originalOnInit = target.prototype.ngOnInit;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    target.prototype.ngOnInit = function (...args: any[]): ReturnType<typeof originalOnInit> {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction();\n      if (activeTransaction) {\n        // eslint-disable-next-line deprecation/deprecation\n        tracingSpan = activeTransaction.startChild({\n          description: `<${target.name}>`,\n          op: ANGULAR_INIT_OP,\n          origin: 'auto.ui.angular.trace_class_decorator',\n        });\n      }\n      if (originalOnInit) {\n        return originalOnInit.apply(this, args);\n      }\n    };\n\n    const originalAfterViewInit = target.prototype.ngAfterViewInit;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    target.prototype.ngAfterViewInit = function (...args: any[]): ReturnType<typeof originalAfterViewInit> {\n      if (tracingSpan) {\n        tracingSpan.end();\n      }\n      if (originalAfterViewInit) {\n        return originalAfterViewInit.apply(this, args);\n      }\n    };\n  };\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Decorator function that can be used to capture a single lifecycle methods of the component.\n */\nexport function TraceMethodDecorator(): MethodDecorator {\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/ban-types\n  return (target: Object, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    descriptor.value = function (...args: any[]): ReturnType<typeof originalMethod> {\n      const now = timestampInSeconds();\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction();\n      if (activeTransaction) {\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.startChild({\n          description: `<${target.constructor.name}>`,\n          endTimestamp: now,\n          op: `${ANGULAR_OP}.${String(propertyKey)}`,\n          origin: 'auto.ui.angular.trace_method_decorator',\n          startTimestamp: now,\n        });\n      }\n      if (originalMethod) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return originalMethod.apply(this, args);\n      }\n    };\n    return descriptor;\n  };\n}\n\n/**\n * Takes the parameterized route from a given ActivatedRouteSnapshot and concatenates the snapshot's\n * child route with its parent to produce the complete parameterized URL of the activated route.\n * This happens recursively until the last child (i.e. the end of the URL) is reached.\n *\n * @param route the ActivatedRouteSnapshot of which its path and its child's path is concatenated\n *\n * @returns the concatenated parameterized route string\n */\nexport function getParameterizedRouteFromSnapshot(route?: ActivatedRouteSnapshot | null): string {\n  const parts: string[] = [];\n\n  let currentRoute = route && route.firstChild;\n  while (currentRoute) {\n    const path = currentRoute && currentRoute.routeConfig && currentRoute.routeConfig.path;\n    if (path === null || path === undefined) {\n      break;\n    }\n\n    parts.push(path);\n    currentRoute = currentRoute.firstChild;\n  }\n\n  const fullPath = parts.filter(part => part).join('/');\n  return fullPath ? `/${fullPath}/` : '/';\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["getDefaultIntegrations","applySdkMetadata","browserInit","VERSION","logger","setContext","isString","Sentry","HttpErrorResponse","i0","Injectable","Inject","WINDOW","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","originalBrowserTracingIntegration","getCurrentScope","filter","NavigationStart","tap","getClient","stripUrlQueryAndFragment","getActiveSpan","startBrowserTracingNavigationSpan","startInactiveSpan","ResolveEnd","spanToJSON","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","NavigationEnd","NavigationCancel","NavigationError","Subscription","i1","Directive","Input","NgModule","timestampInSeconds"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA;;;;;;;IAOG;IAIH;IACO,IAAM,cAAc,GAAG,OAAO,gBAAgB,KAAK,WAAW,GAAG,IAAI,GAAG,gBAAgB;;ICJ/F;;IAEG;IACG,SAAU,IAAI,CAAC,OAAuB,EAAA;IAC1C,IAAA,IAAM,IAAI,GAAA,MAAA,CAAA,MAAA,CAAA;;;;;;;YAOR,mBAAmB,EAAEA,6BAAsB,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAA,WAAW,EAAA;IACrE,YAAA,OAAO,WAAW,CAAC,IAAI,KAAK,UAAU,CAAC;IACzC,SAAC,CAAC;SAAA,EACC,OAAO,CACX,CAAC;IAEF,IAAAC,qBAAgB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAEtC,IAAA,yBAAyB,EAAE,CAAC;QAC5BC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,SAAS,yBAAyB,GAAA;QAChC,IAAM,uBAAuB,GAAG,EAAE,CAAC;QAEnC,IAAM,cAAc,GAAGC,UAAO,IAAIA,UAAO,CAAC,KAAK,GAAG,QAAQ,CAACA,UAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC;IAE1F,IAAA,IAAI,cAAc,EAAE;YAClB,IAAI,cAAc,GAAG,uBAAuB,EAAE;gBAC5C,cAAc;IACZ,gBAAAC,YAAM,CAAC,IAAI,CACT,sDAAA,GAAuD,cAAc,GAAG,GAAA,EACxE,iCAAkC,GAAA,uBAAuB,gBAAa,EACtE,yEAAyE,EACzE,4DAA4D,CAC7D,CAAC;IACL,SAAA;YACDC,iBAAU,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IACpD,KAAA;IACH;;IC5CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAM,eAAe,GAAG,OAAO,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IAEtE;;IAEG;IACG,SAAU,iBAAiB,CAAI,QAAiB,EAAA;;;;;;;;;;IAUpD,IAAA,OAAO,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,EAAE,CAAC;IAChE;;ICFA;IACA,SAAS,sBAAsB,CAAC,KAAc,EAAA;;;IAG5C,IAAA,OAAO,KAAK,IAAK,KAAoC,CAAC,eAAe;cAChE,KAAoC,CAAC,eAAe;cACrD,KAAK,CAAC;IACZ,CAAC;IAED,SAAS,sBAAsB,CAAC,KAAwB,EAAA;;IAEtD,IAAA,IAAI,wBAAwB,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC,KAAK,CAAC;IACpB,KAAA;;QAGD,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE;IAC5D,QAAA,OAAO,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;IAC5B,KAAA;;IAGD,IAAA,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,QAAQ,EAAE;YACnC,OAAO,uBAAA,GAAwB,KAAK,CAAC,MAAM,qBAAe,KAAK,CAAC,KAAK,GAAA,IAAG,CAAC;IAC1E,KAAA;;QAGD,OAAO,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;IAQD,SAAS,wBAAwB,CAAC,KAAc,EAAA;QAC9C,IAAI,KAAK,YAAY,KAAK,EAAE;IAC1B,QAAA,OAAO,IAAI,CAAC;IACb,KAAA;QAED,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC/C,QAAA,OAAO,KAAK,CAAC;IACd,KAAA;QAED,IAAM,SAAS,GAAG,KAAuB,CAAC;IAE1C,IAAA,QACEC,cAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACxB,QAAAA,cAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;IAC3B,SAAC,SAAS,KAAK,SAAS,CAAC,KAAK,IAAIA,cAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAC5D;IACJ,CAAC;IAED;;IAEG;AACH,QAAA,kBAAA,kBAAA,YAAA;IAOE,IAAA,SAAA,kBAAA,CAAkD,OAA6B,EAAA;IAC7E,QAAA,IAAI,CAAC,gCAAgC,GAAG,KAAK,CAAC;IAE9C,QAAA,IAAI,CAAC,QAAQ,GACX,MAAA,CAAA,MAAA,CAAA,EAAA,SAAS,EAAE,IAAI,EAAA,EACZ,OAAO,CACX,CAAC;SACH;IAED;;IAEG;QACI,kBAAW,CAAA,SAAA,CAAA,WAAA,GAAX,UAAY,KAAc,EAAA;YAA1B,IAkCN,KAAA,GAAA,IAAA,CAAA;YAjCC,IAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,uBAAuB,CAAC;;YAG5E,IAAM,OAAO,GAAG,iBAAiB,CAAC,YAAA,EAChC,OAAAC,iBAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE;gBACtC,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;aAC/C,CAAC,CAAA,EAAA,CACH,CAAC;;IAGF,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;;IAE3B,YAAA,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;IAC/B,SAAA;;IAGD,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;IAC5B,YAAA,IAAM,MAAM,GAAGA,iBAAM,CAAC,SAAS,EAAE,CAAC;gBAElC,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,gCAAgC,EAAE;IACjE,gBAAA,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,KAAY,EAAA;IACvC,oBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;;IAEf,wBAAAA,iBAAM,CAAC,gBAAgB,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAA,EAAA,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,IAAG,CAAC;IACtF,qBAAA;IACH,iBAAC,CAAC,CAAC;;IAGH,gBAAA,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;IAC9C,aAAA;IAAM,iBAAA,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;oBAChCA,iBAAM,CAAC,gBAAgB,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAA,EAAA,EAAE,OAAO,EAAA,OAAA,EAAA,CAAA,CAAG,CAAC;IACtE,aAAA;IACF,SAAA;SACF,CAAA;IAED;;IAEG;QACO,kBAAa,CAAA,SAAA,CAAA,aAAA,GAAb,UAAc,KAAc,EAAA;;IAEpC,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;gBAC3B,IAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IACzD,SAAA;IAED,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SACtC,CAAA;IAED;;IAEG;QACO,kBAAiB,CAAA,SAAA,CAAA,iBAAA,GAAjB,UAAkB,cAAuB,EAAA;IACjD,QAAA,IAAM,KAAK,GAAG,sBAAsB,CAAC,cAAc,CAAC,CAAC;;YAGrD,IAAI,KAAK,YAAYC,sBAAiB,EAAE;IACtC,YAAA,OAAO,sBAAsB,CAAC,KAAK,CAAC,CAAC;IACtC,SAAA;;YAGD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,wBAAwB,CAAC,KAAK,CAAC,EAAE;IAChE,YAAA,OAAO,KAAK,CAAC;IACd,SAAA;;IAGD,QAAA,OAAO,IAAI,CAAC;SACb,CAAA;;;IArFG,kBAAA,CAAA,IAAA,GAAAC,aAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,kBAAkB,kBAMK,qBAAqB,EAAA,CAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;IAN5C,kBAAA,CAAA,KAAA,GAAAA,aAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,kBAAkB,cADE,MAAM,EAAA,CAAA,CAAA;sHAC1B,kBAAkB,EAAA,UAAA,EAAA,CAAA;sBADvBC,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;kCAOZC,SAAM;mCAAC,qBAAqB,CAAA;;;IAkFlD;;IAEG;IACH,SAAS,kBAAkB,CAAC,MAA4B,EAAA;IACtD,IAAA,OAAO,IAAI,kBAAkB,CAAC,MAAM,CAAC,CAAC;IACxC;;IC/KO,IAAM,kBAAkB,GAAG,oBAAoB,CAAC;IAEhD,IAAM,eAAe,GAAG,iBAAiB,CAAC;IAE1C,IAAM,UAAU,GAAG,YAAY;;IC6BtC,IAAI,0BAAmC,CAAC;IACxC,IAAI,uBAAiF,CAAC;IACtF,IAAI,uCAAgD,CAAC;IAErD,IAAI,yBAAyB,GAAG,KAAK,CAAC;IAEtC;;;;IAIG;aACa,sBAAsB,CACpC,sBAAgF,EAChF,0BAA0C,EAC1C,gCAAgD,EAAA;;IADhD,IAAA,IAAA,0BAAA,KAAA,KAAA,CAAA,EAAA,EAAA,0BAA0C,GAAA,IAAA,CAAA,EAAA;IAC1C,IAAA,IAAA,gCAAA,KAAA,KAAA,CAAA,EAAA,EAAA,gCAAgD,GAAA,IAAA,CAAA,EAAA;QAEhD,0BAA0B,GAAG,IAAI,CAAC;QAClC,uBAAuB,GAAG,sBAAsB,CAAC;QACjD,uCAAuC,GAAG,gCAAgC,CAAC;IAE3E,IAAA,IAAI,0BAA0B,IAAIC,aAAM,IAAIA,aAAM,CAAC,QAAQ,EAAE;IAC3D,QAAA,sBAAsB,CAAC;IACrB,YAAA,IAAI,EAAEA,aAAM,CAAC,QAAQ,CAAC,QAAQ;IAC9B,YAAA,EAAE,EAAE,UAAU;IACd,YAAA,MAAM,EAAE,uBAAuB;gBAC/B,UAAU,GAAA,EAAA,GAAA,EAAA;oBACR,EAAC,CAAAC,qCAAgC,IAAG,KAAK;IAC1C,gBAAA,EAAA,CAAA;IACF,SAAA,CAAC,CAAC;IACJ,KAAA;IACH,CAAC;IAED;;;;IAIG;IACH;AACO,QAAM,wBAAwB,GAAG,uBAAuB;IAE/D;;;;IAIG;IACG,SAAU,yBAAyB,CACvC,OAAqE,EAAA;IAArE,IAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAqE,GAAA,EAAA,CAAA,EAAA;;;IAIrE,IAAA,IAAI,OAAO,CAAC,oBAAoB,KAAK,KAAK,EAAE;YAC1C,0BAA0B,GAAG,IAAI,CAAC;YAClC,yBAAyB,GAAG,IAAI,CAAC;IAClC,KAAA;QAED,OAAOC,gCAAiC,iCACnC,OAAO,CAAA,EAAA,EACV,oBAAoB,EAAE,KAAK,IAC3B,CAAC;IACL,CAAC;IAED;;;;IAIG;aACa,oBAAoB,GAAA;;IAElC,IAAA,OAAOC,sBAAe,EAAE,CAAC,cAAc,EAAE,CAAC;IAC5C,CAAC;IAED;;;IAGG;AAEH,QAAA,YAAA,kBAAA,YAAA;IA6HE,IAAA,SAAA,YAAA,CAAoC,OAAe,EAAA;YAAnD,IAOC,KAAA,GAAA,IAAA,CAAA;IAPmC,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;YA5H5C,IAAS,CAAA,SAAA,GAAsB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAC5DC,gBAAM,CAAC,UAAC,KAAK,EAA+B,EAAA,OAAA,KAAK,YAAYC,kBAAe,CAAA,EAAA,CAAC,EAC7EC,aAAG,CAAC,UAAA,eAAe,EAAA;;gBACjB,IAAI,CAAC,0BAA0B,EAAE;oBAC/B,cAAc;IACZ,oBAAAd,YAAM,CAAC,KAAK,CAAC,oFAAoF,CAAC,CAAC;oBACrG,OAAO;IACR,aAAA;gBAED,IAAI,KAAI,CAAC,YAAY,EAAE;IACrB,gBAAA,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;IACxB,gBAAA,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC1B,aAAA;IAED,YAAA,IAAM,MAAM,GAAGe,cAAS,EAAE,CAAC;gBAC3B,IAAM,WAAW,GAAGC,8BAAwB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAElE,IAAI,MAAM,IAAI,yBAAyB,EAAE;oBACvC,IAAI,CAACC,kBAAa,EAAE,EAAE;wBACpBC,wCAAiC,CAAC,MAAM,EAAE;IACxC,wBAAA,IAAI,EAAE,WAAW;IACjB,wBAAA,MAAM,EAAE,yBAAyB;4BACjC,UAAU,GAAA,EAAA,GAAA,EAAA;gCACR,EAAC,CAAAT,qCAAgC,IAAG,KAAK;IAC1C,4BAAA,EAAA,CAAA;IACF,qBAAA,CAAC,CAAC;IACJ,iBAAA;;IAGD,gBAAA,KAAI,CAAC,YAAY;IACf,oBAAAU,sBAAiB,CAAC;IAChB,wBAAA,IAAI,EAAE,EAAA,GAAG,eAAe,CAAC,GAAK;IAC9B,wBAAA,EAAE,EAAE,kBAAkB;IACtB,wBAAA,MAAM,EAAE,iBAAiB;IACzB,wBAAA,IAAI,EACF,MAAA,CAAA,MAAA,CAAA,EAAA,yBAAyB,EAAE,iBAAiB,EAC5C,GAAG,EAAE,WAAW,EACb,GAAC,eAAe,CAAC,iBAAiB,IAAI;gCACvC,iBAAiB,EAAE,eAAe,CAAC,iBAAiB;IACrD,yBAAA,EACF;yBACF,CAAC,IAAI,IAAI,CAAC;oBAEb,OAAO;IACR,aAAA;;IAGD,YAAA,IAAI,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;IAE/C,YAAA,IAAI,CAAC,iBAAiB,IAAI,uCAAuC,EAAE;oBACjE,iBAAiB,GAAG,uBAAuB,CAAC;IAC1C,oBAAA,IAAI,EAAE,WAAW;IACjB,oBAAA,EAAE,EAAE,YAAY;IAChB,oBAAA,MAAM,EAAE,yBAAyB;wBACjC,UAAU,GAAA,EAAA,GAAA,EAAA;4BACR,EAAC,CAAAV,qCAAgC,IAAG,KAAK;IAC1C,wBAAA,EAAA,CAAA;IACF,iBAAA,CAAC,CAAC;IACJ,aAAA;IAED,YAAA,IAAI,iBAAiB,EAAE;;IAErB,gBAAA,KAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC,UAAU,CAAC;IAC/C,oBAAA,WAAW,EAAE,EAAA,GAAG,eAAe,CAAC,GAAK;IACrC,oBAAA,EAAE,EAAE,kBAAkB;IACtB,oBAAA,MAAM,EAAE,iBAAiB;IACzB,oBAAA,IAAI,EACF,MAAA,CAAA,MAAA,CAAA,EAAA,yBAAyB,EAAE,iBAAiB,EAC5C,GAAG,EAAE,WAAW,EACb,GAAC,eAAe,CAAC,iBAAiB,IAAI;4BACvC,iBAAiB,EAAE,eAAe,CAAC,iBAAiB;IACrD,qBAAA,EACF;IACF,iBAAA,CAAC,CAAC;IACJ,aAAA;aACF,CAAC,CACH,CAAC;;;;;;;;;YAUK,IAAO,CAAA,OAAA,GAAsB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAC1DG,gBAAM,CAAC,UAAC,KAAK,EAA0B,EAAA,OAAA,KAAK,YAAYQ,aAAU,CAAA,EAAA,CAAC,EACnEN,aAAG,CAAC,UAAA,KAAK,EAAA;gBACP,IAAM,KAAK,GAAG,iCAAiC,CAC5C,KAAK,CAAC,KAAmE,CAAC,IAAI,CAChF,CAAC;;IAGF,YAAA,IAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;;IAE3C,YAAA,IAAM,UAAU,GAAG,CAAC,WAAW,IAAIO,eAAU,CAAC,WAAW,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC;gBACvE,IAAI,WAAW,IAAI,UAAU,CAACZ,qCAAgC,CAAC,KAAK,KAAK,EAAE;IACzE,gBAAA,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC9B,gBAAA,WAAW,CAAC,YAAY,CAACA,qCAAgC,EAAE,OAAO,CAAC,CAAC;IACpE,gBAAA,WAAW,CAAC,YAAY,CAACa,qCAAgC,EAAE,OAAQ,GAAAD,eAAU,CAAC,WAAW,CAAC,CAAC,EAAE,GAAA,UAAU,CAAC,CAAC;IAC1G,aAAA;aACF,CAAC,CACH,CAAC;IAEK,QAAA,IAAA,CAAA,OAAO,GAAsB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAC1DT,gBAAM,CACJ,UAAA,KAAK,EAAA,EAAI,OAAA,KAAK,YAAYW,gBAAa,IAAI,KAAK,YAAYC,mBAAgB,IAAI,KAAK,YAAYC,kBAAe,CAAvG,EAAuG,CACjH,EACDX,aAAG,CAAC,YAAA;gBACF,IAAI,KAAI,CAAC,YAAY,EAAE;IACrB,gBAAA,iBAAiB,CAAC,YAAA;;IAEhB,oBAAA,KAAI,CAAC,YAAa,CAAC,GAAG,EAAE,CAAC;IAC3B,iBAAC,CAAC,CAAC;IACH,gBAAA,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC1B,aAAA;aACF,CAAC,CACH,CAAC;IAOA,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACzB,QAAA,IAAI,CAAC,aAAa,GAAG,IAAIY,iBAAY,EAAE,CAAC;IAExC,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;IACnD,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;IACjD,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;SAClD;IAED;;;IAGG;IACI,IAAA,YAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACL,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC,CAAA;;;oIA5IU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAAtB,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;IAAZ,YAAA,CAAA,KAAA,GAAAA,aAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,YAAY,cADC,MAAM,EAAA,CAAA,CAAA;sHACnB,YAAY,EAAA,UAAA,EAAA,CAAA;sBADxBC,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;IAgJlC,IAAM,iBAAiB,GAAG,SAAS,CAAC;IAEpC;;IAEG;AAEH,QAAA,cAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,cAAA,GAAA;;IAKE;;;IAGG;IACI,IAAA,cAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACL,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;IACvB,YAAA,IAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC;IACxC,SAAA;;IAGD,QAAA,IAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;IACjD,QAAA,IAAI,iBAAiB,EAAE;;IAErB,YAAA,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC,UAAU,CAAC;IAC/C,gBAAA,WAAW,EAAE,GAAA,GAAI,IAAI,CAAC,aAAa,GAAG,GAAA;IACtC,gBAAA,EAAE,EAAE,eAAe;IACnB,gBAAA,MAAM,EAAE,iCAAiC;IAC1C,aAAA,CAAC,CAAC;IACJ,SAAA;SACF,CAAA;IAED;;;IAGG;IACI,IAAA,cAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;YACL,IAAI,IAAI,CAAC,YAAY,EAAE;IACrB,YAAA,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;IACzB,SAAA;SACF,CAAA;;;sIAlCU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+GAAd,cAAc,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,EAAA,aAAA,EAAA,CAAA,OAAA,EAAA,eAAA,CAAA,EAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,CAAA,CAAA;sHAAd,cAAc,EAAA,UAAA,EAAA,CAAA;sBAD1BuB,YAAS;uBAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAA;kCAET,aAAa,EAAA,CAAA;0BAAnCC,QAAK;2BAAC,OAAO,CAAA;;IAoChB;;IAEG;AAKH,QAAA,WAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,WAAA,GAAA;;;;mIAAa,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAxB,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oIAAX,WAAW,EAAA,YAAA,EAAA,CA5CX,cAAc,CAAA,EAAA,OAAA,EAAA,CAAd,cAAc,CAAA,EAAA,CAAA,CAAA;oIA4Cd,WAAW,EAAA,CAAA,CAAA;sHAAX,WAAW,EAAA,UAAA,EAAA,CAAA;sBAJvByB,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,YAAY,EAAE,CAAC,cAAc,CAAC;wBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;qBAC1B,CAAA;;IAGD;;IAEG;aACa,mBAAmB,GAAA;IACjC,IAAA,IAAI,WAAiB,CAAC;;;IAItB,IAAA,OAAO,UAAA,MAAM,EAAA;IACX,QAAA,IAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;;IAEjD,QAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAA;gBAAU,IAAc,IAAA,GAAA,EAAA,CAAA;qBAAd,IAAc,EAAA,GAAA,CAAA,EAAd,EAAc,GAAA,SAAA,CAAA,MAAA,EAAd,EAAc,EAAA,EAAA;oBAAd,IAAc,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAA;;;IAElD,YAAA,IAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;IACjD,YAAA,IAAI,iBAAiB,EAAE;;IAErB,gBAAA,WAAW,GAAG,iBAAiB,CAAC,UAAU,CAAC;IACzC,oBAAA,WAAW,EAAE,GAAA,GAAI,MAAM,CAAC,IAAI,GAAG,GAAA;IAC/B,oBAAA,EAAE,EAAE,eAAe;IACnB,oBAAA,MAAM,EAAE,uCAAuC;IAChD,iBAAA,CAAC,CAAC;IACJ,aAAA;IACD,YAAA,IAAI,cAAc,EAAE;oBAClB,OAAO,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACzC,aAAA;IACH,SAAC,CAAC;IAEF,QAAA,IAAM,qBAAqB,GAAG,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC;;IAE/D,QAAA,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,YAAA;gBAAU,IAAc,IAAA,GAAA,EAAA,CAAA;qBAAd,IAAc,EAAA,GAAA,CAAA,EAAd,EAAc,GAAA,SAAA,CAAA,MAAA,EAAd,EAAc,EAAA,EAAA;oBAAd,IAAc,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAA;;IACzD,YAAA,IAAI,WAAW,EAAE;oBACf,WAAW,CAAC,GAAG,EAAE,CAAC;IACnB,aAAA;IACD,YAAA,IAAI,qBAAqB,EAAE;oBACzB,OAAO,qBAAqB,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAChD,aAAA;IACH,SAAC,CAAC;IACJ,KAAC,CAAC;;IAEJ,CAAC;IAED;;IAEG;aACa,oBAAoB,GAAA;;IAElC,IAAA,OAAO,UAAC,MAAc,EAAE,WAA4B,EAAE,UAA8B,EAAA;IAClF,QAAA,IAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;;YAExC,UAAU,CAAC,KAAK,GAAG,YAAA;gBAAU,IAAc,IAAA,GAAA,EAAA,CAAA;qBAAd,IAAc,EAAA,GAAA,CAAA,EAAd,EAAc,GAAA,SAAA,CAAA,MAAA,EAAd,EAAc,EAAA,EAAA;oBAAd,IAAc,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAA;;IACzC,YAAA,IAAM,GAAG,GAAGC,wBAAkB,EAAE,CAAC;;IAEjC,YAAA,IAAM,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;IACjD,YAAA,IAAI,iBAAiB,EAAE;;oBAErB,iBAAiB,CAAC,UAAU,CAAC;IAC3B,oBAAA,WAAW,EAAE,GAAI,GAAA,MAAM,CAAC,WAAW,CAAC,IAAI,GAAG,GAAA;IAC3C,oBAAA,YAAY,EAAE,GAAG;IACjB,oBAAA,EAAE,EAAK,UAAU,GAAA,GAAA,GAAI,MAAM,CAAC,WAAW,CAAG;IAC1C,oBAAA,MAAM,EAAE,wCAAwC;IAChD,oBAAA,cAAc,EAAE,GAAG;IACpB,iBAAA,CAAC,CAAC;IACJ,aAAA;IACD,YAAA,IAAI,cAAc,EAAE;;oBAElB,OAAO,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACzC,aAAA;IACH,SAAC,CAAC;IACF,QAAA,OAAO,UAAU,CAAC;IACpB,KAAC,CAAC;IACJ,CAAC;IAED;;;;;;;;IAQG;IACG,SAAU,iCAAiC,CAAC,KAAqC,EAAA;QACrF,IAAM,KAAK,GAAa,EAAE,CAAC;IAE3B,IAAA,IAAI,YAAY,GAAG,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC;IAC7C,IAAA,OAAO,YAAY,EAAE;IACnB,QAAA,IAAM,IAAI,GAAG,YAAY,IAAI,YAAY,CAAC,WAAW,IAAI,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC;IACvF,QAAA,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACvC,MAAM;IACP,SAAA;IAED,QAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,QAAA,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC;IACxC,KAAA;IAED,IAAA,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,EAAA,EAAI,OAAA,IAAI,CAAA,EAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtD,OAAO,QAAQ,GAAG,GAAA,GAAI,QAAQ,GAAA,GAAG,GAAG,GAAG,CAAC;IAC1C;;ICjZA;;IAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;"}